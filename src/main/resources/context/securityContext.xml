<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation=" 
	   	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd		
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

 
    <security:global-method-security pre-post-annotations="enabled">
	</security:global-method-security>
 
 	<!-- Stateless RESTful services use BASIC authentication -->
    <security:http create-session="stateless" pattern="/secure/**" use-expressions="true">
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:http-basic/>
        <security:csrf disabled="true"/>
      </security:http>
 
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
 			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,true from CREDENTIALS where username=?"
				authorities-by-username-query="select username,authority from authority where username =?" />
<!--                     <security:user-service> -->
<!-- 				<security:user name="admin" password="admin1" authorities="ROLE_ADMIN" /> -->
<!-- 				</security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
